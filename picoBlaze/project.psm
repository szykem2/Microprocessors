MEM "project.mem"                                      ; dump memory
; open ports
lcd              DSIO       $30
lcd_control      DSIO       $31
int_status       DSIO       $E0
int_mask         DSIO       $E1
ps2              DSIO       $70
ps2_int_edge     DSIO       $71
ps2_int_value    DSIO       $72
ps2_int_mask     DSIO       $73
led              DSIO       00

; rename registers
; registers sF, sE, sD are reserved for delays
shift            EQU        sC                         ; shift pressed
caps             EQU        sB                         ; caps lock
num              EQU        sA                         ; num lock
btn_rel          EQU        s9                         ; button released
int_cnt          EQU        s8                         ; interrupt counter
decoded          EQU        s7                         ; decoded value
cursor           EQU        s6                         ; cursor position
special          EQU        s5                         ; special character enter, home etc.

EINT                                                   ; enable interrupt system

; RAM INITIALIZATION
; A
LOAD    s0,      97
STORE   s0,      $1C
; B
LOAD    s0,      98
STORE   s0,      $32
; C
LOAD    s0,      99
STORE   s0,      $21
; D
LOAD    s0,      100
STORE   s0,      $23
; E
LOAD    s0,      101
STORE   s0,      $24
; F
LOAD    s0,      102
STORE   s0,      $21
; G
LOAD    s0,      103
STORE   s0,      $34
; H
LOAD    s0,      104
STORE   s0,      $33
; I
LOAD    s0,      105
STORE   s0,      $43
; J
LOAD    s0,      106
STORE   s0,      $3B
; K
LOAD    s0,      107
STORE   s0,      $42
; L
LOAD    s0,      108
STORE   s0,      $4B
; M
LOAD    s0,      109
STORE   s0,      $3A
; N
LOAD    s0,      110
STORE   s0,      $31
; O
LOAD    s0,      111
STORE   s0,      $44
; P
LOAD    s0,      112
STORE   s0,      $4D
; Q
LOAD    s0,      113
STORE   s0,      $15
; R
LOAD    s0,      114
STORE   s0,      $2D
; S
LOAD    s0,      115
STORE   s0,      $1B
; T
LOAD    s0,      116
STORE   s0,      $2C
; U
LOAD    s0,      117
STORE   s0,      $3C
; V
LOAD    s0,      118
STORE   s0,      $2A
; W
LOAD    s0,      119
STORE   s0,      $1D
; X
LOAD    s0,      120
STORE   s0,      $22
; Y
LOAD    s0,      121
STORE   s0,      $35
; Z
LOAD    s0,      122
STORE   s0,      $1A

; `
LOAD    s0,      196
STORE   s0,      $0E
; ]
LOAD    s0,      93
STORE   s0,      $5B
; [
LOAD    s0,      91
STORE   s0,      $54
; ;
LOAD    s0,      59
STORE   s0,      $4C
; '
LOAD    s0,      39
STORE   s0,      $52
; \
LOAD    s0,      92
STORE   s0,      $5D
; ,
LOAD    s0,      44
STORE   s0,      $41
; .
LOAD    s0,      46
STORE   s0,      $49
; . (numpad)
LOAD    s0,      46
STORE   s0,      $71
; /
LOAD    s0,      47
STORE   s0,      $4A
; space
LOAD    s0,      32
STORE   s0,      $29
; tab
LOAD    s0,      9
STORE   s0,      $0D
; -
LOAD    s0,      45
STORE   s0,      $4E
; =
LOAD    s0,      61
STORE   s0,      $55
; * (numpad)
LOAD    s0,      42
STORE   s0,      $7C
; - (numpad)
LOAD    s0,      45
STORE   s0,      $7B
; + (numpad)
LOAD    s0,      43
STORE   s0,      $79

; 1
LOAD    s0,      49
STORE   s0,      $16
; 1 (numpad)
LOAD    s0,      49
STORE   s0,      $69
; 2
LOAD    s0,      50
STORE   s0,      $1E
; 2 (numpad)
LOAD    s0,      50
STORE   s0,      $72
; 3
LOAD    s0,      51
STORE   s0,      $26
; 3 (numpad)
LOAD    s0,      51
STORE   s0,      $7A
; 4
LOAD    s0,      52
STORE   s0,      $25
; 4 (numpad)
LOAD    s0,      52
STORE   s0,      $6B
; 5
LOAD    s0,      53
STORE   s0,      $2E
; 5 (numpad)
LOAD    s0,      53
STORE   s0,      $73
; 6
LOAD    s0,      54
STORE   s0,      $36
; 6 (numpad)
LOAD    s0,      54
STORE   s0,      $74
; 7
LOAD    s0,      55
STORE   s0,      $3D
; 7 (numpad)
LOAD    s0,      55
STORE   s0,      $6C
; 8
LOAD    s0,      56
STORE   s0,      $3E
; 8 (numpad)
LOAD    s0,      56
STORE   s0,      $75
; 9
LOAD    s0,      57
STORE   s0,      $46
; 9 (numpad)
LOAD    s0,      57
STORE   s0,      $7D
; 0
LOAD    s0,      48
STORE   s0,      $45
; 0 (numpad)
LOAD    s0,      48
STORE   s0,      $70


; global interrupts
LOAD    s0,      2                                     ; prepare interrupt for PS/2
OUT     s0,      int_mask                              ; enable intterupts

; local interrupts
LOAD    s0,      3                                     ; native state of voltage line(high)
OUT     s0,      ps2
LOAD    s0,      1                                     ; edge interrupt for clock
OUT     s0,      ps2_int_edge                          ; set interrupting on edge
LOAD    s0,      0
OUT     s0,      ps2_int_value                         ; set interrupting on decreasing edge
LOAD    s0,      1                                     ; prepare interrupt mask for clock
OUT     s0,      ps2_int_mask                          ; enable interrupt for PS/2

; initialize display
LOAD    s0,      $38

OUT     s0,      lcd
CALL    handleE
CALL    delay5m

OUT     s0,      lcd
CALL    handleE
CALL    delay40u
CALL    delay40u
CALL    delay40u

OUT     s0,      lcd
CALL    handleE
CALL    delay40u

OUT     s0,      lcd
CALL    handleE
CALL    delay40u

LOAD    s0,      $06
OUT     s0,      lcd
CALL    handleE
CALL    delay40u

LOAD    s0,      $0e
OUT     s0,      lcd
CALL    handleE
CALL    delay40u

LOAD    s0,      $01
OUT     s0,      lcd
CALL    handleE
CALL    delay5m
CALL    fLine

LOAD s8, 0
LOAD sA, 0

et:
        JUMP     et

delay1m:
        LOAD     sF,      26

wait1m:
        CALL     delay40u
        SUB      sF,      1
        JUMP     NZ,      wait1m
        RET

delay5m:
        CALL     delay1m
        CALL     delay1m
        CALL     delay1m
        CALL     delay1m
        CALL     delay1m
        RET

delay1u:
        LOAD     sE,      24

wait1u:
        SUB      sE,      1
        JUMP     NZ,      wait1u
        LOAD     sE,      sE
        RET

delay40u:
        LOAD     sD,      36

wait40u:
        CALL     delay1u
        SUB      sD,      1
        JUMP     NZ,      wait40u
        RET

secLine:
        LOAD     s0,      $C0
        OUT      s0,      lcd
        CALL     handleE
        CALL     delay40u
        RET

fLine:
        LOAD     s0,      $80
        OUT      s0,      lcd
        LOAD     s4,      0
        CALL     handleE
        CALL     delay40u
        RET

handleE:
        LOAD     sE,      1
        OUT      sE,      lcd_control
        LOAD     sE,      0
        LOAD     s0,      s0
        OUT      sE,      lcd_control
        RET

handleERS:
        LOAD     sE,      3
        OUT      sE,      lcd_control
        LOAD     sE,      2
        LOAD     s0,      s0
        OUT      sE,      lcd_control
        RET

handleInt:
        ADD      int_cnt, 1
        COMP     int_cnt, 1
        JUMP     Z,       ed

        COMP     int_cnt, 10
        JUMP     Z,       ed

        COMP     int_cnt, 11
        JUMP     Z,       display

        IN       s1,      ps2
        SR0      s1
        COMP     s1,      1
        JUMP     NZ,      mov0
        SR1      decoded
        JUMP     ed
mov0:
        SR0      decoded
        JUMP     ed
display:
        COMP     decoded, $F0
        JUMP     Z,       released
        FETCH    s4,      decoded
        COMP     s4,      0
        JUMP     Z,       ed
        OUT      s4,      led
        OUT      s4,      lcd
        CALL     handleERS
        CALL     delay40u
        LOAD     decoded, 0
        LOAD     int_cnt, 0
        JUMP     ed
released:
        LOAD     btn_rel, 1
ed:
        LOAD     s3,      0
        OUT      s3,      int_status
        RETI     ENABLE

ORG     $3FF
JUMP    handleInt
